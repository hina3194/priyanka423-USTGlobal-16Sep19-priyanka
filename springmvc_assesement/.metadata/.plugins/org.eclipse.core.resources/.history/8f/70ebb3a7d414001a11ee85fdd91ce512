package com.ustglobal.retailer.dao;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.TypedQuery;

import com.ustglobal.retailer.dto.OrderBean;
import com.ustglobal.retailer.dto.RetailerBean;

public class RetailerDAOImpl {

	@PersistenceUnit
	EntityManagerFactory factory;



	@Override
	public boolean createProfile(RetailerBean Bean) {
		EntityManager entityManger=factory.createEntityManager();
		EntityTransaction entityTransaction=entityManger.getTransaction();
		entityTransaction.begin();
		
		try {
			entityManger.persist(Bean);

		}catch(Exception e) {
			e.printStackTrace();

		}

		entityTransaction.commit();

	}

	@Override
	public RetailerBean login(int rid, String password) {
		EntityManager entityManager=factory.createEntityManager();
		String jpql="from RetailerBean where id=:id and password=:pass";
		TypedQuery<RetailerBean> query=entityManager.createQuery(jpql,RetailerBean.class);
		query.setParameter("id", rid);
		query.setParameter("pass", password);
		try {
			RetailerBean bean=query.getSingleResult();
			return bean;
		}catch(Exception e) {
			e.printStackTrace();
			return null;
		}

	}

	@Override
	public OrderBean searchProduct(int pid) {
		EntityManager entityManager=factory.createEntityManager();
		OrderBean bean=entityManager.find(OrderBean.class, pid);
		return bean;

	}

	@Override
	public boolean updatePassword(int rid, String password) {
		EntityManager entityManager=factory.createEntityManager();
		EntityTransaction entityTransaction=entityManager.getTransaction();
		entityTransaction.begin();
		RetailerBean bean=entityManager.find(RetailerBean.class, rid);
		bean.setPassword(password);
		entityTransaction.commit();


		return true;
	}

	@Override
	public double sumAmount(OrderBean bean) {

		EntityManager entityManager=factory.createEntityManager();
		EntityTransaction entityTransaction=entityManager.getTransaction();
		entityTransaction.begin();
		OrderBean bean2=entityManager.find(OrderBean.class, bean.getOid());
		double qty=bean2.getQuantity();
		int price=bean2.getPrice();
		entityTransaction.commit();
		return bean2.getAmountpay();
	}

	@Override
	public Object retrieveOrder(int oid) {

		return null;
	}




}
